To configure First:

git config --global user.name "jinx"
hit config --global user.email "ajinkyanigade999@gmail.com"

To Crete repo:

git init    (it will create repositary)
git add --a  (it will push file to staging area)
git commit -m "msg"

to check status:

git status

to check logs:(to check history)

git log

To remove/delete trpositary:

git rm -rf .git

for cloning outside project:

git clone giturl

for ignoring files or directory:

first create file with .gitignore

then add file name or pattern to ignore that

eg: *.log 
    dir\	

Diffrenece between file:

git diff (It will compare difference between working directory and staging area)

git diff --staged (it will compare last commit to working directory)

Skip staging area and direct commit:

git commit -a -m "modified for test"

Renaming and moving the file:

git mv file1.txt file2.txt

Cached file:(sometimes added gitignore file goes into stagig mode)(remove from tracking mode)

git rm --cached file1.txt

git viewing the log history and changing and editing commits:

git log
git log -p (it will show history of commits along with the diffences or changes from last file)
git log -p -2 ( it will show only two commits)
git log --stat 
git log --pretty=oneline
git log --pretty=short
git log --since=2.days  git log --since=2.month git log --since=2.year
git log --pretty=format:%h -- %an"(h--hash commit an- author name)
git commit --ammend 

To unstage a file:
git restore --staged filename.txt

going for last coomit in unmodified stage or undoing changes:(this command more useful only when all files are commited)

git checkout -- filename.txt
git checkkot -f (all changes undo)

To create a repo and add remote host and then push pull files:
git remote
gite remote add origin gitsrepoaddress 
gite remote -v
--add ssh configuration 
(git remote add origin git@github.com:jinx1234/Gitlearning.git)
( ssh-keygen -t ed25519 -C "ajinkyanigade999@gmail.com") 
($ eval "$(ssh-agent -s)) 
(tail ~/.ssh/id_ed25519.pub)
--then push data into repo
git push -u origin master

To craete an alias:

git config --global alias.st status
git config --global alias.unsatge 'restore --staged --'

to creat an branch in git:
git checkout -b dev

to switch branch:
git checkout master

To merge with other branch:
git merge dev

to check last commit in branch
git branch -v

to check merge branch:
git branch --merged

to check unmerge branch:
git branch --no-merged

to delete the branch:
git branch -d dev

to confirmly delete:
git branch -D dev

Push branches to remote github repositary:
git push origin dev

remove branches at github :
git push -d origin dev